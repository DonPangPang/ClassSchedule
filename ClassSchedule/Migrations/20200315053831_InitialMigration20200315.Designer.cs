// <auto-generated />
using System;
using ClassSchedule.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassSchedule.Migrations
{
    [DbContext(typeof(ClassScheduleDbContext))]
    [Migration("20200315053831_InitialMigration20200315")]
    partial class InitialMigration20200315
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("ClassSchedule.Entities.Class", b =>
                {
                    b.Property<Guid>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Introduction")
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.HasKey("ClassId");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = new Guid("1b7b249e-658e-4ce5-a012-6277060e1a97"),
                            ClassName = "Class1",
                            Introduction = "This is Class 1."
                        },
                        new
                        {
                            ClassId = new Guid("1bda4fd2-b11e-4934-8f40-3118a630b854"),
                            ClassName = "Class2",
                            Introduction = "This is Class 2."
                        },
                        new
                        {
                            ClassId = new Guid("83b6fc4b-c619-478c-928c-ca5a9c2f728c"),
                            ClassName = "Class3",
                            Introduction = "This is Class 3."
                        });
                });

            modelBuilder.Entity("ClassSchedule.Entities.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("BeginWeek")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<int>("EndWeek")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Lesson")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SingleOrDouble")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<int>("WeekDay")
                        .HasColumnType("INTEGER");

                    b.HasKey("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = new Guid("0b1e1cb4-6ce1-498f-a944-32afd9217f5b"),
                            BeginWeek = 1,
                            CourseName = "Course A",
                            EndWeek = 8,
                            Lesson = 1,
                            SingleOrDouble = 1,
                            StudentId = new Guid("b4aab9f4-c743-4fc5-a09e-aa172fc318be"),
                            TeacherName = "Teacher A",
                            WeekDay = 5
                        },
                        new
                        {
                            CourseId = new Guid("16ae1317-603d-4e42-aa83-87a17cec2b00"),
                            BeginWeek = 1,
                            CourseName = "Course B",
                            EndWeek = 8,
                            Lesson = 1,
                            SingleOrDouble = 1,
                            StudentId = new Guid("b4aab9f4-c743-4fc5-a09e-aa172fc318be"),
                            TeacherName = "Teacher B",
                            WeekDay = 5
                        },
                        new
                        {
                            CourseId = new Guid("bf370188-1110-4794-85ae-19af49d1a2ac"),
                            BeginWeek = 1,
                            CourseName = "Course C",
                            EndWeek = 8,
                            Lesson = 1,
                            SingleOrDouble = 1,
                            StudentId = new Guid("b4aab9f4-c743-4fc5-a09e-aa172fc318be"),
                            TeacherName = "Teacher C",
                            WeekDay = 5
                        },
                        new
                        {
                            CourseId = new Guid("5334fc19-f39d-4b5e-87a2-125deb9483ea"),
                            BeginWeek = 1,
                            CourseName = "Course D",
                            EndWeek = 8,
                            Lesson = 1,
                            SingleOrDouble = 1,
                            StudentId = new Guid("b4aab9f4-c743-4fc5-a09e-aa172fc318be"),
                            TeacherName = "Teacher D",
                            WeekDay = 5
                        });
                });

            modelBuilder.Entity("ClassSchedule.Entities.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("b4aab9f4-c743-4fc5-a09e-aa172fc318be"),
                            ClassId = new Guid("1b7b249e-658e-4ce5-a012-6277060e1a97"),
                            StudentName = "A Student"
                        },
                        new
                        {
                            StudentId = new Guid("57700e3b-ea69-48a4-90cf-6e5bfc9bec6a"),
                            ClassId = new Guid("1bda4fd2-b11e-4934-8f40-3118a630b854"),
                            StudentName = "B Student"
                        },
                        new
                        {
                            StudentId = new Guid("79b8da71-e41d-4210-b78b-89e415a65b19"),
                            ClassId = new Guid("83b6fc4b-c619-478c-928c-ca5a9c2f728c"),
                            StudentName = "C Student"
                        });
                });

            modelBuilder.Entity("ClassSchedule.Entities.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<Guid>("ClassId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<Guid>("StudentId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserName");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserName = "admin",
                            ClassId = new Guid("1b7b249e-658e-4ce5-a012-6277060e1a97"),
                            Password = "123456",
                            StudentId = new Guid("b4aab9f4-c743-4fc5-a09e-aa172fc318be")
                        },
                        new
                        {
                            UserName = "test1",
                            ClassId = new Guid("1bda4fd2-b11e-4934-8f40-3118a630b854"),
                            Password = "test1",
                            StudentId = new Guid("57700e3b-ea69-48a4-90cf-6e5bfc9bec6a")
                        },
                        new
                        {
                            UserName = "test2",
                            ClassId = new Guid("83b6fc4b-c619-478c-928c-ca5a9c2f728c"),
                            Password = "test2",
                            StudentId = new Guid("79b8da71-e41d-4210-b78b-89e415a65b19")
                        });
                });

            modelBuilder.Entity("ClassSchedule.Entities.Course", b =>
                {
                    b.HasOne("ClassSchedule.Entities.Student", "Student")
                        .WithMany("Courses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClassSchedule.Entities.Student", b =>
                {
                    b.HasOne("ClassSchedule.Entities.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
